@import url(https://fonts.googleapis.com/css?family=Montserrat);

$square-card-size: 3em * 2;
$card-size-width: $square-card-size;
$card-size-height: $square-card-size;
$card-columns: 4;
$cardBackColor: steelblue;

/// Mixin to prefix several properties at once
/// @author Hugo Giraudel
/// @param {Map} $declarations - Declarations to prefix
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }

    // Output standard non-prefixed declaration
    #{$property}: $value;
  }
}

body {
  background: green;
  text-align: center;
}

header, dl, button{
  font-family: 'Montserrat', Tahoma, Geneva, sans-serif;
  text-transform: uppercase;
  font-size: 160%;
  @include prefix((
    border-radius: 0.3em
  ), webkit moz ms);
}

button {
  background: white;
}

#button { // TODO add transition on button changes
  transition: all 2s;  // but how?
  // transform: rotate(360deg);
}

#table {
  width: $card-size-width * $card-columns + $card-size-width / 2;
  margin: ($card-size-width / 2) auto;
}

/* entire container, keeps perspective */
.card-container {
	perspective: 1000;
  display: inline-block;
  padding: 0.2em;
}

/* keep mouse cursor normal when over flipped cards */
.card-container.flip:hover {
  cursor: default;
}

/* make mouse cursor a finger pointer when over a flippable card  */
.card-container:not(.flip):hover {
  cursor: pointer;
}

/* flip toggle */
.card-container.flip .flippable-card {
  // -webkit-transform: rotateY(180deg);
  // -moz-transform: rotateY(180deg);
  // -ms-transform: rotateY(180deg);
	// transform: rotateY(180deg);
  @include prefix((
    transform: rotateY(180deg)
  ), webkit moz ms);
}

.card-container, .card-back, .card-face {
	width: $card-size-width;
	height: $card-size-height;
  // border-radius: 10%;
  @include prefix((
    border-radius: 10%
  ), webkit moz ms);
}

/* flip speed goes here */
.flippable-card {
  // transition: 0.6s;
	// transform-style: preserve-3d;
  @include prefix((
    transition: 0.6s,
  	transform-style: preserve-3d
  ), webkit moz ms);
	position: relative;
}

/* hide back of pane during swap */
.card-back, .card-face {
  // -webkit-backface-visibility: hidden;
	// backface-visibility: hidden;

  @include prefix((
    backface-visibility: hidden
  ), webkit);

	position: absolute;
	top: 0;
	left: 0;
}

/* front pane, placed above back */
.card-back {
	z-index: 2;
	/* for firefox 31 */
  // -webkit-transform: rotateY(0deg);
  // -moz-transform: rotateY(0deg);
  // -ms-transform: rotateY(0deg);
	// transform: rotateY(0deg);
  @include prefix((
    transform: rotateY(0deg)
  ), webkit moz ms);
  background: $cardBackColor;
}

/* back, initially hidden pane */
.card-face {
  // -webkit-transform: rotateY(180deg);
  // -moz-transform: rotateY(180deg);
  // -ms-transform: rotateY(180deg);
	// transform: rotateY(180deg);
  @include prefix((
    transform: rotateY(180deg)
  ), webkit moz);
  color: black;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card-face p {
  display: block;
  margin: auto;
  // display: table-cell;
  // text-align: center;
  // vertical-align: middle;
  line-height: $card-size-height;
  font-size: $card-size-height * 0.8;
  font-family: Tahoma, Geneva, sans-serif;
}

.animate-nod {
  box-shadow: 1em yellow;
}

/* shake failed matches
learned from: https://css-tricks.com/snippets/css/shake-css-keyframe-animation/
*/

.animate-shake {
  // animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  // transform: translate3d(0, 0, 0);
  // backface-visibility: hidden;
  @include prefix((
    animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both,
    transform: translate3d(0, 0, 0),
    backface-visibility: hidden
  ), webkit moz);
  perspective: 1000px;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
    @include prefix((
      transform: translate3d(-1px, 0, 0)
    ), webkit moz ms);
  }

  20%, 80% {
    // transform: translate3d(2px, 0, 0);
    @include prefix((
      transform: translate3d(2px, 0, 0)
    ), webkit moz ms);
  }

  30%, 50%, 70% {
    // transform: translate3d(-4px, 0, 0);
    @include prefix((
      transform: translate3d(-4px, 0, 0)
    ), webkit moz ms);
  }

  40%, 60% {
    // transform: translate3d(4px, 0, 0);
    @include prefix((
      transform: translate3d(4px, 0, 0)
    ), webkit moz ms);
  }
}

.animate-nod {
  animation: nod 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

@keyframes nod {
  10%, 90% {
    // transform: translate3d(0, -1px, 0);
    @include prefix((
      transform: translate3d(0, -1px, 0)
    ), webkit moz ms);
  }

  20%, 80% {
    // transform: translate3d(0, 2px, 0);
    @include prefix((
      transform: translate3d(0, 2px, 0)
    ), webkit moz ms);
  }

  30%, 50%, 70% {
    // transform: translate3d(0, -4px, 0);
    @include prefix((
      transform: translate3d(0, -4px, 0)
    ), webkit moz ms);
  }

  40%, 60% {
    // transform: translate3d(0, 4px, 0);
    @include prefix((
      transform: translate3d(0, 4px, 0)
    ), webkit moz ms);
  }
}

/* score and stats board */

#stats {
  position: absolute;
  width: 8em;
  top: 1em;
  right: 0;
  padding: 1em;
  cursor: default;
}

dl {
  margin: auto;
}
dd, dt {
  display: block;
  margin: auto;
}
dd {
  font-size: 240%;
  padding-bottom: .5em;
}
dt {
  text-transform: lowercase;
  font-size: 60%;
}

/* for debugMode only */

p.hint {
  color: $cardBackColor;
}

.hint:hover {
  color: white;
}
